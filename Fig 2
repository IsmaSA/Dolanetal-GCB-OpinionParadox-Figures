

#### maps

# number of barriers per country

#list.files()

library(ggplot2)
library(dplyr)
library(readxl)
library(sf)
library(tidyr)
library(boot)

df <- st_read("C:/Users/User/OneDrive - Queen's University Belfast/PhD/Chapters/Chapter 3 Global Connectivity (InvaPact)//GDW_barriers_v1_0.shp")
df <- df %>% drop_na(YEAR_DAM)
df <- df %>% filter(!YEAR_DAM < -98)
df <- df %>% filter(YEAR_DAM > 0)
table(df$YEAR_DAM)

# Cumulative number of barrier constructed ---- 
df <- df[order(df$YEAR_DAM), ]
df$Cumulative_Barriers <- ave(df$YEAR_DAM, FUN = seq_along)
cumulative_df <- aggregate(Cumulative_Barriers ~ YEAR_DAM, data = df, FUN = length)
cumulative_df$Cumulative_Barriers <- cumsum(cumulative_df$Cumulative_Barriers)

ggplot(cumulative_df, aes(x = YEAR_DAM, y = Cumulative_Barriers)) +
  geom_line(color = "black", size = 1) +   xlim(1800,2020)+
  labs(x = "Year of Construction",
       y = "Cumulative Barriers Constructed") +
  theme_bw() +                            
  theme(
    plot.title = element_text(hjust = 0.5),   
    text = element_text(size = 12)) 



# Plot global scale  ----- 
library(rnaturalearth)

library(countrycode)

df$CONTINENT <- countrycode(sourcevar = df$COUNTRY,
                                           origin = "country.name",
                                           destination = "continent")

df$REGION <- countrycode(sourcevar = df$COUNTRY,
                                        origin = "country.name",
                                        destination = "region")

df <- df %>%
  mutate(CONTINENT = case_when(
    REGION == "North America" ~ "North America",  
    REGION == "Latin America & Caribbean" ~ "South America",  
    TRUE ~ CONTINENT
  ))

df <- df %>%
  mutate(CONTINENT = ifelse(COUNTRY == "Kosovo", "Europe", CONTINENT))



df <- df %>% filter(!is.na(CONTINENT))

df1  <- df %>% group_by(COUNTRY) %>% summarise(n = n())
world <- ne_countries(scale = "medium", returnclass = "sf")

world <- st_make_valid(world)
#df1 <- st_make_valid(df1)

world_data <- st_join(world, df1)
world_data$n[is.na(world_data$n)] <- 0

world_data <- world_data[,c(4,15,18,64,65,66)]


#install.packages("tmap")
library(tmap)
#install.packages("quickPlot") 
library(quickPlot)
library(sp)

world_data <- pruneMap(world_data)
world_data <- st_transform(world_data, crs = "+proj=eqearth")

tm_shape(world_data) + tm_borders("black", lwd = .5) +
  tm_shape(world_data) +
  tm_symbols(col = "red", size = "n", scale = .5) 


library(maptools)
library(maps)
df_barriers_per_country <- df %>%
  group_by(COUNTRY) %>%
  summarise(n_barriers = n())


#### mapping from ismael ------------------

wrld <- map("world", interior=T, xlim=c(-179,179), 
            ylim=c(-89,89), plot=FALSE)

wrld_sf = st_as_sf(wrld, fill=FALSE, crs=llCRS)
wrld_sf = st_wrap_dateline(wrld_sf)
plot(wrld_sf)
wrld_sp = as(wrld_sf[!st_is_empty(wrld_sf),], "Spatial")
plot(wrld_sp)
prj_new <- CRS("+proj=eqearth")
wrld_proj <- spTransform(wrld_sp, prj_new)
plot(wrld_proj)
wrld_proj <- as(st_transform(st_as_sf(wrld_sp), st_crs(prj_new)), "Spatial") #spTransform(wrld_sp, prj_new)
plot(wrld_proj)
wrld_grd <- gridlines(wrld_sp, easts=c(-179,seq(-150,150,50), 179.5), norths=seq(-75,75,15), ndiscr=100)
wrld_grd_proj <- spTransform(wrld_grd, prj_new)
wrld_grd_proj <- as(st_transform(st_as_sf(wrld_grd), st_crs(prj_new)), "Spatial") #spTransform(wrld_grd, prj_new)
plot(wrld_grd_proj)
at_sp <- gridat(wrld_sp, easts=0, norths=seq(-75,75,15), offset=0.3)
at_proj <- spTransform(at_sp, prj_new)
at_proj <- as(st_transform(st_as_sf(at_sp), st_crs(prj_new)), "Spatial") #spTransform(at_sp, prj_new)
plot(wrld_proj, col="grey60")
plot(wrld_grd_proj, add=TRUE, lty=3, col="grey70")
text(coordinates(at_proj), pos=at_proj$pos, offset=at_proj$offset, labels=parse(text=as.character(at_proj$labels)), cex=0.6)



world <- ne_countries(scale = "medium", returnclass = "sf")

df_barriers_per_country <- df %>%
  group_by(COUNTRY) %>%
  summarise(n_barriers = n())

df_barriers_per_country <- st_transform(df_barriers_per_country, st_crs(world))
world<- st_make_valid(world)
world_barriers <- st_join(world, df_barriers_per_country)
world_barriers$n_barriers[is.na(world_barriers$n_barriers)] <- 0

world_map <- map_data('world')

world_sf <- world_map %>% 
  st_as_sf(coords = c('long', 'lat'), crs = 4326) %>% 
  group_by(group) %>% 
  summarise(geometry = st_combine(geometry)) %>% 
  st_cast('POLYGON')

world_barriers <- st_join(world_sf, df_barriers_per_country)
world_barriers$n_barriers[is.na(world_barriers$n_barriers)] <- 0


ggplot(world_barriers) +  ##### i like this a lot
  geom_sf(aes(fill = n_barriers), color = "black", size = 0.2) +  # Use aes(fill = n_barriers)
  scale_fill_gradient(low = "lightblue", high = "darkblue", na.value = "grey") +
  labs( fill = "Barriers") +
  theme_bw()


world_barriers_filtered <- world_barriers %>%
  filter(!is.na(COUNTRY))

world_centroids <- st_centroid(world_barriers_filtered)

world_barriers_filtered <- world_barriers %>%
  filter(!is.na(COUNTRY))

world_centroids <- st_centroid(world_barriers_filtered)

world_centroids1 <- world_centroids %>%
  group_by(COUNTRY) %>%
  summarise(n_barriers = sum(n_barriers, na.rm = TRUE), geometry = st_union(geometry)) %>%
  ungroup()

tm_shape(world_barriers) +
  tm_polygons(col = "n_barriers", palette = c("grey85", "wheat"), style = "fixed", 
              breaks = c(0, 1, Inf), labels = c("No data", "Countries with barriers"), 
              title = "", border.col = "black", lwd = 0.2) + 
  
  tm_shape(world_centroids1) +
  tm_symbols(size = "n_barriers", col = "red", scale = 1.5, alpha = 0.5, 
             title.size = "Number of Barriers") +
  
  tm_layout( legend.title.size = 1, 
             legend.text.size = 0.7, 
             title.position = c("center", "top"),
             legend.position = c("left", "bottom")) +
  
  tm_layout(asp = 0)









## heat map annual constructions per year (before and afer 1980)
library(dplyr)
library(ggplot2)
library(sf)
library(rnaturalearth)
library(tmap)

# old work - taken bfrom ismaels map #####################
df <- df %>% filter(!is.na(CONTINENT))

df1  <- df %>% group_by(COUNTRY) %>% summarise(n = n())
world <- ne_countries(scale = "medium", returnclass = "sf")

world <- st_make_valid(world)
#df1 <- st_make_valid(df1)

world_data <- st_join(world, df1)
world_data$n[is.na(world_data$n)] <- 0

world_data <- world_data[,c(4,15,18,64,65,66)]


#install.packages("tmap")
library(tmap)
#install.packages("quickPlot") 
library(quickPlot)
library(sp)

world_data <- pruneMap(world_data)
world_data <- st_transform(world_data, crs = "+proj=eqearth")

tm_shape(world_data) + tm_borders("black", lwd = .5) +
  tm_shape(world_data) +
  tm_symbols(col = "red", size = "n", scale = .5) 

library(maptools)
library(maps)
df_barriers_per_country <- df %>%
  group_by(COUNTRY) %>%
  summarise(n_barriers = n())

wrld <- map("world", interior=T, xlim=c(-179,179), 
            ylim=c(-89,89), plot=FALSE)

wrld_sf = st_as_sf(wrld, fill=FALSE, crs=llCRS)
wrld_sf = st_wrap_dateline(wrld_sf)
plot(wrld_sf)
wrld_sp = as(wrld_sf[!st_is_empty(wrld_sf),], "Spatial")
plot(wrld_sp)
prj_new <- CRS("+proj=eqearth")
wrld_proj <- spTransform(wrld_sp, prj_new)
plot(wrld_proj)
wrld_proj <- as(st_transform(st_as_sf(wrld_sp), st_crs(prj_new)), "Spatial") #spTransform(wrld_sp, prj_new)
plot(wrld_proj)
wrld_grd <- gridlines(wrld_sp, easts=c(-179,seq(-150,150,50), 179.5), norths=seq(-75,75,15), ndiscr=100)
wrld_grd_proj <- spTransform(wrld_grd, prj_new)
wrld_grd_proj <- as(st_transform(st_as_sf(wrld_grd), st_crs(prj_new)), "Spatial") #spTransform(wrld_grd, prj_new)
plot(wrld_grd_proj)
at_sp <- gridat(wrld_sp, easts=0, norths=seq(-75,75,15), offset=0.3)
at_proj <- spTransform(at_sp, prj_new)
at_proj <- as(st_transform(st_as_sf(at_sp), st_crs(prj_new)), "Spatial") #spTransform(at_sp, prj_new)
plot(wrld_proj, col="grey60")
plot(wrld_grd_proj, add=TRUE, lty=3, col="grey70")
text(coordinates(at_proj), pos=at_proj$pos, offset=at_proj$offset, labels=parse(text=as.character(at_proj$labels)), cex=0.6)

world <- ne_countries(scale = "medium", returnclass = "sf")

df_barriers_per_country <- df %>%
  group_by(COUNTRY) %>%
  summarise(n_barriers = n())

df_barriers_per_country <- st_transform(df_barriers_per_country, st_crs(world))
world<- st_make_valid(world)
world_barriers <- st_join(world, df_barriers_per_country)
world_barriers$n_barriers[is.na(world_barriers$n_barriers)] <- 0

world_map <- map_data('world')

world_sf <- world_map %>% 
  st_as_sf(coords = c('long', 'lat'), crs = 4326) %>% 
  group_by(group) %>% 
  summarise(geometry = st_combine(geometry)) %>% 
  st_cast('POLYGON')

world_barriers <- st_join(world_sf, df_barriers_per_country)
world_barriers$n_barriers[is.na(world_barriers$n_barriers)] <- 0


# Calculate the annual constructions
barrier_rate <- df %>%
  group_by(YEAR_DAM) %>%
  summarise(annual_constructions = n()) %>%
  arrange(YEAR_DAM)
  
print(barrier_rate)


# annual constructions
ggplot(barrier_rate) + 
  geom_sf(aes(fill = annual_constructions), color = "black") +
  scale_fill_gradient(low = "blue", high = "red", na.value = "grey", name = "Annual Constructions") +
  labs( fill = "annual_constructions") +
  theme_minimal()
#############################

# my working code
library(dplyr)


# aim - the heat map like ismael made with the rate con construction since 1980 
#overlayed with the round red circles for the total number of barriers 

df <- st_read("C:/Users/User/OneDrive - Queen's University Belfast/PhD/Chapters/Chapter 3 Global Connectivity (InvaPact)//GDW_barriers_v1_0.shp")
df <- df %>% drop_na(YEAR_DAM)
df <- df %>% filter(!YEAR_DAM < -98)
df <- df %>% filter(YEAR_DAM > 0)
table(df$YEAR_DAM)

# finding construction rate per country since 1980
df_since_1980 <- df %>%
  filter(YEAR_DAM >= 1980)

constructions_per_country <- df_since_1980 %>%
  group_by(COUNTRY) %>%
  summarise(total_constructions = n())

years_since_1980 <- as.numeric(format(Sys.Date(), "%Y")) - 1980

constructions_rate_per_country <- constructions_per_country %>%
  mutate(annual_rate_of_constructions = total_constructions / years_since_1980)

print(constructions_rate_per_country)




### plotting
library(dplyr)
library(ggplot2)
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)

world <- ne_countries(scale = "medium", returnclass = "sf")

world_data <- st_join(world, constructions_rate_per_country)

world_data$rate_of_construction[is.na(world_data$rate_of_construction)] <- 0

names(world_data)

Average_Rate_since1980 <- ggplot(data = world_data) +
  geom_sf(aes(fill = annual_rate_of_constructions), color = "black", size = 0.2) +
  scale_fill_gradient(low = "lightblue", high = "darkblue", na.value = "grey", name = "Average Rate of Constructions") +
  labs(title = "Average Annual Rate of Barrier Constructions per Country since 1980") +
  theme_minimal() +
  theme(
    panel.grid = element_blank(),
    axis.text = element_blank(),
    axis.ticks = element_blank(),
    plot.title = element_text(hjust = 0.5, size = 16)
  )



# Now overlay with red circles for total number of barriers
ggplot() +
  geom_sf(data = world_data, aes(fill = annual_rate_of_constructions), color = "black") +
  scale_fill_gradient(low = "lightblue", high = "darkblue", na.value = "grey", name = "Rate of Construction") +
  geom_sf(data = world_centroids1, aes(size = n_barriers), color = "red", alpha = 0.5) +
  scale_size_continuous(range = c(1, 6), name = "Number of Barriers") +
  
  labs(title = "Rate of Barrier Constructions with Barrier Counts Overlay") +
  theme_minimal() +
  theme(
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 10),
    axis.title = element_text(size = 12),
    axis.text = element_text(size = 10)
  )
##############################



######## finding average rate of contructions per country over all time ###########
constructions_per_country2 <- df %>%
  group_by(COUNTRY) %>%
  summarise(total_constructions = n())

constructions_rate_per_country2 <- constructions_per_country2 %>%
  mutate(annual_rate_of_constructions = total_constructions / years_since_1980)

print(constructions_rate_per_country2)


library(dplyr)
library(ggplot2)
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)

world <- ne_countries(scale = "medium", returnclass = "sf")

world_data <- st_join(world, constructions_rate_per_country2)

world_data$annual_rate_of_constructions[is.na(world_data$annual_rate_of_constructions)] <- 0

names(world_data)

ggplot(data = world_data) +
  geom_sf(aes(fill = annual_rate_of_constructions), color = "black", size = 0.2) +
  scale_fill_gradient(low = "lightblue", high = "darkblue", na.value = "grey", name = "Average Rate of Constructions") +
  labs(title = "Average Annual Rate of Barrier Constructions per Country since recording began") +
  theme_minimal() +
  theme(
    panel.grid = element_blank(),
    axis.text = element_blank(),
    axis.ticks = element_blank(),
    plot.title = element_text(hjust = 0.5, size = 16)
  )

##################



# maps we actually used !!!!!!!!!! ---------------------- 
#keeping rate fill scales the same
generate_map_data <- function(df, start_year, end_year) {
  df_filtered <- df %>%
    filter(YEAR_DAM >= start_year & YEAR_DAM <= end_year)
  
  barriers_per_country <- df_filtered %>%
    group_by(COUNTRY) %>%
    summarise(n_barriers = n(), .groups = 'drop')
  
  constructions_per_country <- df_filtered %>%
    group_by(COUNTRY) %>%
    summarise(total_constructions = n(), .groups = 'drop') %>%
    mutate(annual_rate_of_constructions = total_constructions / (end_year - start_year))
  
  world <- ne_countries(scale = "medium", returnclass = "sf") %>% st_make_valid()
  
  barriers_sf <- st_as_sf(barriers_per_country)
  constructions_sf <- st_as_sf(constructions_per_country)
  
  world_data <- world %>%
    st_join(barriers_sf, join = st_intersects) %>%
    st_join(constructions_sf, join = st_intersects) %>%
    mutate(
      n_barriers = ifelse(is.na(n_barriers), 0, n_barriers),
      annual_rate_of_constructions = ifelse(is.na(annual_rate_of_constructions), 0, annual_rate_of_constructions)
    )
  
  world_data_filtered <- world_data %>%
    filter(!is.na(n_barriers) & n_barriers > 0)
  
  world_centroids <- st_centroid(world_data_filtered)
  world_centroids_summary <- world_centroids %>%
    group_by(name) %>%
    summarise(n_barriers = sum(n_barriers, na.rm = TRUE), geometry = st_union(geometry)) %>%
    ungroup()
  
  list(world_data = world_data, world_centroids = world_centroids_summary)
}

data_1940_2020 <- generate_map_data(df, 1940, 2020)
data_1940_1960 <- generate_map_data(df, 1940, 1960)
data_1960_1980 <- generate_map_data(df, 1960, 1980)
data_1980_2000 <- generate_map_data(df, 1980, 2000)
data_2000_2020 <- generate_map_data(df, 2000, 2020)

max_rate <- max(
 # max(data_1940_1960$world_data$annual_rate_of_constructions, na.rm = TRUE),
  max(data_1960_1980$world_data$annual_rate_of_constructions, na.rm = TRUE),
  max(data_1980_2000$world_data$annual_rate_of_constructions, na.rm = TRUE),
  max(data_2000_2020$world_data$annual_rate_of_constructions, na.rm = TRUE)
)


fill_scale <- scale_fill_gradient(low = "lightblue", high = "darkblue", na.value = "grey",
                                  name = "Rate of Construction", limits = c(0, max_rate))


# total numbers since 1800 -----------------
world <- ne_countries(scale = "medium", returnclass = "sf")

df_barriers_per_country <- df %>%
  group_by(COUNTRY) %>%
  summarise(n_barriers = n())

df_barriers_per_country <- st_transform(df_barriers_per_country, st_crs(world))
world<- st_make_valid(world)
world_barriers <- st_join(world, df_barriers_per_country)
world_barriers$n_barriers[is.na(world_barriers$n_barriers)] <- 0

world_map <- map_data('world')

world_sf <- world_map %>% 
  st_as_sf(coords = c('long', 'lat'), crs = 4326) %>% 
  group_by(group) %>% 
  summarise(geometry = st_combine(geometry)) %>% 
  st_cast('POLYGON')

world_barriers <- st_join(world_sf, df_barriers_per_country)
world_barriers$n_barriers[is.na(world_barriers$n_barriers)] <- 0

world_barriers_filtered <- world_barriers %>%
  filter(!is.na(COUNTRY))

world_centroids <- st_centroid(world_barriers_filtered)

world_barriers_filtered <- world_barriers %>%
  filter(!is.na(COUNTRY))

world_centroids <- st_centroid(world_barriers_filtered)

world_centroids1 <- world_centroids %>%
  group_by(COUNTRY) %>%
  summarise(n_barriers = sum(n_barriers, na.rm = TRUE), geometry = st_union(geometry)) %>%
  ungroup()

tm_shape(world_barriers) +
  tm_polygons(col = "n_barriers", palette = c("grey85", "wheat"), style = "fixed", 
              breaks = c(0, 1, Inf), labels = c("No data", "Countries with barriers"), 
              title = "", border.col = "black", lwd = 0.2) + 
  
  tm_shape(world_centroids1) +
  tm_symbols(size = "n_barriers", col = "red", scale = 1.5, alpha = 0.5, 
             title.size = "Number of Barriers") +
  
  tm_layout( legend.title.size = 1, 
             legend.text.size = 0.7, 
             title.position = c("center", "top"),
             legend.position = c("left", "bottom")) +
  
  tm_layout(asp = 0)




df_since_1800 <- df %>%
  filter(YEAR_DAM >= 1800)

constructions_per_country_total <- df_since_1800 %>%
  group_by(COUNTRY) %>%
  summarise(total_constructions = n())

years_since_1880 <- as.numeric(format(Sys.Date(), "%Y")) - 1800

constructions_per_country_total <- constructions_per_country_total %>%
  mutate(annual_rate_of_constructions = total_constructions / years_since_1880)

print(constructions_per_country_total)


constructions_per_country_total <- df %>%
  group_by(COUNTRY) %>%
  summarise(total_constructions = n())

constructions_rate_per_country_total <- constructions_per_country_total %>%
  mutate(annual_rate_of_constructions = total_constructions / years_since_1980) *100

print(constructions_rate_per_country_total)


world <- ne_countries(scale = "medium", returnclass = "sf")

world_data <- st_join(world, constructions_rate_per_country2)

world_data$annual_rate_of_constructions[is.na(world_data$annual_rate_of_constructions)] <- 0

names(world_data)

ggplot() +
  geom_sf(data = world_data, aes(fill = annual_rate_of_constructions), color = "black") +
  scale_fill_gradient(low = "lightblue", high = "darkblue", na.value = "grey", name = "Rate of Construction") +
  geom_sf(data = world_centroids1, aes(size = n_barriers), color = "red", alpha = 0.5) +
  scale_size_continuous(range = c(1, 6), name = "Number of Barriers") +
  
  labs(title = "Total Rate and Number of Barrier Constructions 1800-2020") +
  theme_minimal() +
  theme(
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 10),
    axis.title = element_text(size = 12),
    axis.text = element_text(size = 10)
  )
###################################################


#### 1800 - 1900 ---------

world <- ne_countries(scale = "medium", returnclass = "sf")


df_barriers_1800_1900 <- df %>%
  filter(YEAR_DAM >= 1800 & YEAR_DAM <= 1900) 

df_barriers_per_country1800_1900 <- df_barriers_1800_1900 %>%
  group_by(COUNTRY) %>%
  summarise(n_barriers = n())

df_barriers_per_country1800_1900 <- st_transform(df_barriers_per_country1800_1900, st_crs(world))
world<- st_make_valid(world)
world_barriers <- st_join(world, df_barriers_per_country1800_1900)
world_barriers$n_barriers[is.na(world_barriers$n_barriers)] <- 0

world_map <- map_data('world')

world_sf <- world_map %>% 
  st_as_sf(coords = c('long', 'lat'), crs = 4326) %>% 
  group_by(group) %>% 
  summarise(geometry = st_combine(geometry)) %>% 
  st_cast('POLYGON')

world_barriers <- st_join(world_sf, df_barriers_per_country1800_1900)
world_barriers$n_barriers[is.na(world_barriers$n_barriers)] <- 0

world_barriers_filtered <- world_barriers %>%
  filter(!is.na(COUNTRY))

world_centroids <- st_centroid(world_barriers_filtered)

world_barriers_filtered <- world_barriers %>%
  filter(!is.na(COUNTRY))

world_centroids <- st_centroid(world_barriers_filtered)

world_centroids1 <- world_centroids %>%
  group_by(COUNTRY) %>%
  summarise(n_barriers = sum(n_barriers, na.rm = TRUE), geometry = st_union(geometry)) %>%
  ungroup()

tm_shape(world_barriers) +
  tm_polygons(col = "n_barriers", palette = c("grey85", "wheat"), style = "fixed", 
              breaks = c(0, 1, Inf), labels = c("No data", "Countries with barriers"), 
              title = "", border.col = "black", lwd = 0.2) + 
  
  tm_shape(world_centroids1) +
  tm_symbols(size = "n_barriers", col = "red", scale = 1.5, alpha = 0.5, 
             title.size = "Number of Barriers") +
  
  tm_layout( legend.title.size = 1, 
             legend.text.size = 0.7, 
             title.position = c("center", "top"),
             legend.position = c("left", "bottom")) +
  
  tm_layout(asp = 0)




df_since_1800_1900 <- df %>%
  filter(YEAR_DAM >= 1800 & YEAR_DAM <= 1900)

constructions_per_country_1800_1900 <- df_since_1800_1900 %>%
  group_by(COUNTRY) %>%
  summarise(total_constructions = n())

#years_1800_1900 <- as.numeric(format(Sys.Date(), "%Y")) - 1980

constructions_rate_per_country1800_1900 <- constructions_per_country_1800_1900 %>%
  mutate(annual_rate_of_constructions = total_constructions / years_1800_1900)

print(constructions_rate_per_country1800_1900)



constructions_rate_per_country1800_1900 <- constructions_rate_per_country1800_1900 %>%
  mutate(annual_rate_of_constructions = ifelse(annual_rate_of_constructions == 0, NA, annual_rate_of_constructions))

#world_data$annual_rate_of_constructions[is.na(world_data$annual_rate_of_constructions)] <- 0




world <- ne_countries(scale = "medium", returnclass = "sf")

world_data <- st_join(world, constructions_rate_per_country1800_1900)


names(world_data)

ggplot() +
  geom_sf(data = world_data, aes(fill = annual_rate_of_constructions), color = "black") +
  scale_fill_gradient(low = "lightblue", high = "darkblue", na.value = "grey", name = "Rate of Construction") +
  geom_sf(data = world_centroids1, aes(size = n_barriers), color = "red", scale = 1.5, alpha = 0.5) +
  scale_size_continuous(range = c(1, 6), name = "Number of Barriers") +
  
  labs(title = "Number and Rate of Barrier Constructions 1900-1950") +
  theme_minimal() +
  theme(
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 10),
    axis.title = element_text(size = 12),
    axis.text = element_text(size = 10)
  ) 

################################



#### 1900 - 1950 ---------

world <- ne_countries(scale = "medium", returnclass = "sf")


df_barriers_1900_1950 <- df %>%
  filter(YEAR_DAM >= 1900 & YEAR_DAM <= 1950) 

df_barriers_per_country1900_1950 <- df_barriers_1900_1950 %>%
  group_by(COUNTRY) %>%
  summarise(n_barriers = n())

df_barriers_per_country1900_1950 <- st_transform(df_barriers_per_country1900_1950, st_crs(world))
world<- st_make_valid(world)
world_barriers <- st_join(world, df_barriers_per_country1900_1950)
world_barriers$n_barriers[is.na(world_barriers$n_barriers)] <- 0

world_map <- map_data('world')

world_sf <- world_map %>% 
  st_as_sf(coords = c('long', 'lat'), crs = 4326) %>% 
  group_by(group) %>% 
  summarise(geometry = st_combine(geometry)) %>% 
  st_cast('POLYGON')

world_barriers <- st_join(world_sf, df_barriers_per_country1900_1950)
world_barriers$n_barriers[is.na(world_barriers$n_barriers)] <- 0

world_barriers_filtered <- world_barriers %>%
  filter(!is.na(COUNTRY))

world_centroids <- st_centroid(world_barriers_filtered)

world_barriers_filtered <- world_barriers %>%
  filter(!is.na(COUNTRY))

world_centroids <- st_centroid(world_barriers_filtered)

world_centroids1 <- world_centroids %>%
  group_by(COUNTRY) %>%
  summarise(n_barriers = sum(n_barriers, na.rm = TRUE), geometry = st_union(geometry)) %>%
  ungroup()

tm_shape(world_barriers) +
  tm_polygons(col = "n_barriers", palette = c("grey85", "wheat"), style = "fixed", 
              breaks = c(0, 1, Inf), labels = c("No data", "Countries with barriers"), 
              title = "", border.col = "black", lwd = 0.2) + 
  
  tm_shape(world_centroids1) +
  tm_symbols(size = "n_barriers", col = "red", scale = 1.5, alpha = 0.5, 
             title.size = "Number of Barriers") +
  
  tm_layout( legend.title.size = 1, 
             legend.text.size = 0.7, 
             title.position = c("center", "top"),
             legend.position = c("left", "bottom")) +
  
  tm_layout(asp = 0)




df_since_1900_1950 <- df %>%
  filter(YEAR_DAM >= 1900 & YEAR_DAM <= 1950)

constructions_per_country_1900_1950 <- df_since_1900_1950 %>%
  group_by(COUNTRY) %>%
  summarise(total_constructions = n())

years_1800_1900 <- as.numeric(format(Sys.Date(), "%Y")) - 1980

constructions_rate_per_country1900_1950 <- constructions_per_country_1900_1950 %>%
  mutate(annual_rate_of_constructions = total_constructions / years_1900_1950)

print(constructions_rate_per_country1900_1950)



world <- ne_countries(scale = "medium", returnclass = "sf")

world_data <- st_join(world, constructions_rate_per_country1900_1950)

world_data$annual_rates_of_construction[world_data$annual_rates_of_construction == 0] <- NA

#world_data$annual_rate_of_constructions[is.na(world_data$annual_rate_of_constructions)] <- 0

names(world_data)

ggplot() +
  geom_sf(data = world_data, aes(fill = annual_rate_of_constructions), color = "black") +
  scale_fill_gradient(low = "lightblue", high = "darkblue", na.value = "grey", name = "Rate of Construction") +
  geom_sf(data = world_centroids1, aes(size = n_barriers), color = "red", scale = 1.5, alpha = 0.5) +
  scale_size_continuous(range = c(1, 6), name = "Number of Barriers") +
  
  labs(title = "Number and Rate of Barrier Constructions 1900-1950") +
  theme_minimal() +
  theme(
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 10),
    axis.title = element_text(size = 12),
    axis.text = element_text(size = 10)
  ) 

################################



#### 1980 - 2020 ---------

world <- ne_countries(scale = "medium", returnclass = "sf")


df_barriers_1980_2020 <- df %>%
  filter(YEAR_DAM >= 1980 & YEAR_DAM <= 2020) 

df_barriers_per_country1980_2020 <- df_barriers_1980_2020 %>%
  group_by(COUNTRY) %>%
  summarise(n_barriers = n())

df_barriers_per_country1980_2020 <- st_transform(df_barriers_per_country1980_2020, st_crs(world))
world<- st_make_valid(world)
world_barriers <- st_join(world, df_barriers_per_country1980_2020)
world_barriers$n_barriers[is.na(world_barriers$n_barriers)] <- 0

world_map <- map_data('world')

world_sf <- world_map %>% 
  st_as_sf(coords = c('long', 'lat'), crs = 4326) %>% 
  group_by(group) %>% 
  summarise(geometry = st_combine(geometry)) %>% 
  st_cast('POLYGON')

world_barriers <- st_join(world_sf, df_barriers_per_country1980_2020)
world_barriers$n_barriers[is.na(world_barriers$n_barriers)] <- 0

world_barriers_filtered <- world_barriers %>%
  filter(!is.na(COUNTRY))

world_centroids <- st_centroid(world_barriers_filtered)

world_barriers_filtered <- world_barriers %>%
  filter(!is.na(COUNTRY))

world_centroids <- st_centroid(world_barriers_filtered)

world_centroids1 <- world_centroids %>%
  group_by(COUNTRY) %>%
  summarise(n_barriers = sum(n_barriers, na.rm = TRUE), geometry = st_union(geometry)) %>%
  ungroup()

tm_shape(world_barriers) +
  tm_polygons(col = "n_barriers", palette = c("grey85", "wheat"), style = "fixed", 
              breaks = c(0, 1, Inf), labels = c("No data", "Countries with barriers"), 
              title = "", border.col = "black", lwd = 0.2) + 
  
  tm_shape(world_centroids1) +
  tm_symbols(size = "n_barriers", col = "red", scale = 1.5, alpha = 0.5, 
             title.size = "Number of Barriers") +
  
  tm_layout( legend.title.size = 1, 
             legend.text.size = 0.7, 
             title.position = c("center", "top"),
             legend.position = c("left", "bottom")) +
  
  tm_layout(asp = 0)




df_since_1980_2020 <- df %>%
  filter(YEAR_DAM >= 1980 & YEAR_DAM <= 2020)

constructions_per_country_1980_2020 <- df_since_1980_2020 %>%
  group_by(COUNTRY) %>%
  summarise(total_constructions = n())

years_1980_2020 <- 2020 - 1980

constructions_rate_per_country1980_2020 <- constructions_per_country_1980_2020 %>%
  mutate(annual_rate_of_constructions = total_constructions / years_1980_2020)

print(constructions_rate_per_country1980_2020)



world <- ne_countries(scale = "medium", returnclass = "sf")

world_data <- st_join(world, constructions_rate_per_country1980_2020)

world_data$annual_rate_of_constructions[world_data$annual_rate_of_constructions == 0] <- NA

#constructions_rate_per_country1800_1900 <- constructions_rate_per_country1800_1900 %>%
#mutate(annual_rate_of_constructions = ifelse(annual_rate_of_constructions == 0, NA, annual_rate_of_constructions))

#world_data$annual_rate_of_constructions[is.na(world_data$annual_rate_of_constructions)] <- 0

names(world_data)

ggplot() +
  geom_sf(data = world_data, aes(fill = annual_rate_of_constructions), color = "black") +
  fill_scale +
  geom_sf(data = world_centroids1, aes(size = n_barriers), color = "red", scale = 1.5, alpha = 0.5) +
  scale_size_continuous(range = c(1, 6), name = "Number of Barriers") +
  
  labs(title = "Number and Rate of Barrier Constructions 1980-2020") +
  theme_minimal() +
  theme(
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 10),
    axis.title = element_text(size = 12),
    axis.text = element_text(size = 10)
  ) 


###################################



#### MAPS WE ACTUALLY USED -------------------------------
#### 1940 - 1960 ---------

world <- ne_countries(scale = "medium", returnclass = "sf")


df_barriers_1940_1960 <- df %>%
  filter(YEAR_DAM >= 1940 & YEAR_DAM <= 1960) 

df_barriers_per_country1940_1960 <- df_barriers_1940_1960 %>%
  group_by(COUNTRY) %>%
  summarise(n_barriers = n())

df_barriers_per_country1940_1960 <- st_transform(df_barriers_per_country1940_1960, st_crs(world))
world<- st_make_valid(world)
world_barriers <- st_join(world, df_barriers_per_country1940_1960)
world_barriers$n_barriers[is.na(world_barriers$n_barriers)] <- 0

world_map <- map_data('world')

world_sf <- world_map %>% 
  st_as_sf(coords = c('long', 'lat'), crs = 4326) %>% 
  group_by(group) %>% 
  summarise(geometry = st_combine(geometry)) %>% 
  st_cast('POLYGON')

world_barriers <- st_join(world_sf, df_barriers_per_country1940_1960)
world_barriers$n_barriers[is.na(world_barriers$n_barriers)] <- 0

world_barriers_filtered <- world_barriers %>%
  filter(!is.na(COUNTRY))

world_centroids <- st_centroid(world_barriers_filtered)

world_barriers_filtered <- world_barriers %>%
  filter(!is.na(COUNTRY))

world_centroids <- st_centroid(world_barriers_filtered)

world_centroids1 <- world_centroids %>%
  group_by(COUNTRY) %>%
  summarise(n_barriers = sum(n_barriers, na.rm = TRUE), geometry = st_union(geometry)) %>%
  ungroup()

tm_shape(world_barriers) +
  tm_polygons(col = "n_barriers", palette = c("grey85", "wheat"), style = "fixed", 
              breaks = c(0, 1, Inf), labels = c("No data", "Countries with barriers"), 
              title = "", border.col = "black", lwd = 0.2) + 
  
  tm_shape(world_centroids1) +
  tm_symbols(size = "n_barriers", col = "red", scale = 1.5, alpha = 0.5, 
             title.size = "Number of Barriers") +
  
  tm_layout( legend.title.size = 1, 
             legend.text.size = 0.7, 
             title.position = c("center", "top"),
             legend.position = c("left", "bottom")) +
  
  tm_layout(asp = 0)




df_since_1940_1960 <- df %>%
  filter(YEAR_DAM >= 1940 & YEAR_DAM <= 1960)

constructions_per_country_1940_1960 <- df_since_1940_1960 %>%
  group_by(COUNTRY) %>%
  summarise(total_constructions = n())

years_1940_1960 <- 1960 - 1940

constructions_rate_per_country1940_1960 <- constructions_per_country_1940_1960 %>%
  #mutate(annual_rate_of_constructions = total_constructions / years_1940_1960)
  mutate(percentage_rate_of_constructions = (total_constructions / years_1940_1960) * 100)

print(constructions_rate_per_country1940_1960)



world <- ne_countries(scale = "medium", returnclass = "sf")

world_data <- st_join(world, constructions_rate_per_country1940_1960)

#world_data$annual_rate_of_constructions[world_data$annual_rate_of_constructions == 0] <- NA
world_data$annual_rate_of_constructions[world_data$annual_rate_of_constructions == 0] <- NA


#constructions_rate_per_country1800_1900 <- constructions_rate_per_country1800_1900 %>%
#mutate(annual_rate_of_constructions = ifelse(annual_rate_of_constructions == 0, NA, annual_rate_of_constructions))

#world_data$annual_rate_of_constructions[is.na(world_data$annual_rate_of_constructions)] <- 0

names(world_data)

ggplot() +
  geom_sf(data = world_data, aes(fill = annual_rate_of_constructions), color = "black") +
  fill_scale +
  geom_sf(data = world_centroids1, aes(size = n_barriers), color = "red", scale = 1.5, alpha = 0.5) +
  scale_size_continuous(range = c(1, 6), name = "Number of Barriers") +
  labs(title = "Number and Rate of Barrier Constructions 1940-1960") +
  theme_minimal() +
  theme(
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 10),
    axis.title = element_text(size = 12),
    axis.text = element_text(size = 10)
  ) 


###############################################

#### 1960 - 1980 ---------

world <- ne_countries(scale = "medium", returnclass = "sf")


df_barriers_1960_1980 <- df %>%
  filter(YEAR_DAM >= 1960 & YEAR_DAM <= 1980) 

df_barriers_per_country1960_1980 <- df_barriers_1960_1980 %>%
  group_by(COUNTRY) %>%
  summarise(n_barriers = n())

df_barriers_per_country1960_1980 <- st_transform(df_barriers_per_country1960_1980, st_crs(world))
world<- st_make_valid(world)
world_barriers <- st_join(world, df_barriers_per_country1960_1980)
world_barriers$n_barriers[is.na(world_barriers$n_barriers)] <- 0

world_map <- map_data('world')

world_sf <- world_map %>% 
  st_as_sf(coords = c('long', 'lat'), crs = 4326) %>% 
  group_by(group) %>% 
  summarise(geometry = st_combine(geometry)) %>% 
  st_cast('POLYGON')

world_barriers <- st_join(world_sf, df_barriers_per_country1960_1980)
world_barriers$n_barriers[is.na(world_barriers$n_barriers)] <- 0

world_barriers_filtered <- world_barriers %>%
  filter(!is.na(COUNTRY))

world_centroids <- st_centroid(world_barriers_filtered)

world_barriers_filtered <- world_barriers %>%
  filter(!is.na(COUNTRY))

world_centroids <- st_centroid(world_barriers_filtered)

world_centroids1 <- world_centroids %>%
  group_by(COUNTRY) %>%
  summarise(n_barriers = sum(n_barriers, na.rm = TRUE), geometry = st_union(geometry)) %>%
  ungroup()

tm_shape(world_barriers) +
  tm_polygons(col = "n_barriers", palette = c("grey85", "wheat"), style = "fixed", 
              breaks = c(0, 1, Inf), labels = c("No data", "Countries with barriers"), 
              title = "", border.col = "black", lwd = 0.2) + 
  
  tm_shape(world_centroids1) +
  tm_symbols(size = "n_barriers", col = "red", scale = 1.5, alpha = 0.5, 
             title.size = "Number of Barriers") +
  
  tm_layout( legend.title.size = 1, 
             legend.text.size = 0.7, 
             title.position = c("center", "top"),
             legend.position = c("left", "bottom")) +
  
  tm_layout(asp = 0)




df_since_1960_1980 <- df %>%
  filter(YEAR_DAM >= 1960 & YEAR_DAM <= 1980)

constructions_per_country_1960_1980 <- df_since_1960_1980 %>%
  group_by(COUNTRY) %>%
  summarise(total_constructions = n())

years_1960_1980 <- 1980 - 1960

constructions_rate_per_country1960_1980 <- constructions_per_country_1960_1980 %>%
  mutate(annual_rate_of_constructions = total_constructions / years_1960_1980)

print(constructions_rate_per_country1960_1980)



world <- ne_countries(scale = "medium", returnclass = "sf")

world_data <- st_join(world, constructions_rate_per_country1960_1980)

world_data$annual_rate_of_constructions[world_data$annual_rate_of_constructions == 0] <- NA

#constructions_rate_per_country1800_1900 <- constructions_rate_per_country1800_1900 %>%
#mutate(annual_rate_of_constructions = ifelse(annual_rate_of_constructions == 0, NA, annual_rate_of_constructions))

#world_data$annual_rate_of_constructions[is.na(world_data$annual_rate_of_constructions)] <- 0

names(world_data)

ggplot() +
  geom_sf(data = world_data, aes(fill = annual_rate_of_constructions), color = "black") +
  fill_scale +
  geom_sf(data = world_centroids1, aes(size = n_barriers), color = "red", scale = 1.5, alpha = 0.5) +
  scale_size_continuous(range = c(1, 6), name = "Number of Barriers") +
  labs(title = "Number and Rate of Barrier Constructions 1960-1980") +
  theme_minimal() +
  theme(
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 10),
    axis.title = element_text(size = 12),
    axis.text = element_text(size = 10)
  ) 

###########################


#### 1980 - 2000 ---------

world <- ne_countries(scale = "medium", returnclass = "sf")


df_barriers_1980_2000 <- df %>%
  filter(YEAR_DAM >= 1980 & YEAR_DAM <= 2000) 

df_barriers_per_country1980_2000 <- df_barriers_1980_2000 %>%
  group_by(COUNTRY) %>%
  summarise(n_barriers = n())

df_barriers_per_country1980_2000 <- st_transform(df_barriers_per_country1980_2000, st_crs(world))
world<- st_make_valid(world)
world_barriers <- st_join(world, df_barriers_per_country1980_2000)
world_barriers$n_barriers[is.na(world_barriers$n_barriers)] <- 0

world_map <- map_data('world')

world_sf <- world_map %>% 
  st_as_sf(coords = c('long', 'lat'), crs = 4326) %>% 
  group_by(group) %>% 
  summarise(geometry = st_combine(geometry)) %>% 
  st_cast('POLYGON')

world_barriers <- st_join(world_sf, df_barriers_per_country1980_2000)
world_barriers$n_barriers[is.na(world_barriers$n_barriers)] <- 0

world_barriers_filtered <- world_barriers %>%
  filter(!is.na(COUNTRY))

world_centroids <- st_centroid(world_barriers_filtered)

world_barriers_filtered <- world_barriers %>%
  filter(!is.na(COUNTRY))

world_centroids <- st_centroid(world_barriers_filtered)

world_centroids1 <- world_centroids %>%
  group_by(COUNTRY) %>%
  summarise(n_barriers = sum(n_barriers, na.rm = TRUE), geometry = st_union(geometry)) %>%
  ungroup()

tm_shape(world_barriers) +
  tm_polygons(col = "n_barriers", palette = c("grey85", "wheat"), style = "fixed", 
              breaks = c(0, 1, Inf), labels = c("No data", "Countries with barriers"), 
              title = "", border.col = "black", lwd = 0.2) + 
  
  tm_shape(world_centroids1) +
  tm_symbols(size = "n_barriers", col = "red", scale = 1.5, alpha = 0.5, 
             title.size = "Number of Barriers") +
  
  tm_layout( legend.title.size = 1, 
             legend.text.size = 0.7, 
             title.position = c("center", "top"),
             legend.position = c("left", "bottom")) +
  
  tm_layout(asp = 0)




df_since_1980_2000 <- df %>%
  filter(YEAR_DAM >= 1980 & YEAR_DAM <= 2000)

constructions_per_country_1980_2000 <- df_since_1980_2000 %>%
  group_by(COUNTRY) %>%
  summarise(total_constructions = n())

years_1980_2000 <- 2000 - 1980

constructions_rate_per_country1980_2000 <- constructions_per_country_1980_2000 %>%
  mutate(annual_rate_of_constructions = total_constructions / years_1980_2000)

print(constructions_rate_per_country1980_2000)



world <- ne_countries(scale = "medium", returnclass = "sf")

world_data <- st_join(world, constructions_rate_per_country1980_2000)

world_data$annual_rate_of_constructions[world_data$annual_rate_of_constructions == 0] <- NA

#constructions_rate_per_country1800_1900 <- constructions_rate_per_country1800_1900 %>%
#mutate(annual_rate_of_constructions = ifelse(annual_rate_of_constructions == 0, NA, annual_rate_of_constructions))

#world_data$annual_rate_of_constructions[is.na(world_data$annual_rate_of_constructions)] <- 0

names(world_data)

ggplot() +
  geom_sf(data = world_data, aes(fill = annual_rate_of_constructions), color = "black") +
  fill_scale +
  geom_sf(data = world_centroids1, aes(size = n_barriers), color = "red", scale = 1.5, alpha = 0.5) +
  scale_size_continuous(range = c(1, 6), name = "Number of Barriers") +
  
  labs(title = "Number and Rate of Barrier Constructions 1980-2000") +
  theme_minimal() +
  theme(
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 10),
    axis.title = element_text(size = 12),
    axis.text = element_text(size = 10)
  ) 

#############################


#### 2000 - 2020 ---------

world <- ne_countries(scale = "medium", returnclass = "sf")


df_barriers_2000_2020 <- df %>%
  filter(YEAR_DAM >= 2000 & YEAR_DAM <= 2020) 

df_barriers_per_country2000_2020 <- df_barriers_2000_2020 %>%
  group_by(COUNTRY) %>%
  summarise(n_barriers = n())

df_barriers_per_country2000_2020 <- st_transform(df_barriers_per_country2000_2020, st_crs(world))
world<- st_make_valid(world)
world_barriers <- st_join(world, df_barriers_per_country2000_2020)
world_barriers$n_barriers[is.na(world_barriers$n_barriers)] <- 0

world_map <- map_data('world')

world_sf <- world_map %>% 
  st_as_sf(coords = c('long', 'lat'), crs = 4326) %>% 
  group_by(group) %>% 
  summarise(geometry = st_combine(geometry)) %>% 
  st_cast('POLYGON')

world_barriers <- st_join(world_sf, df_barriers_per_country2000_2020)
world_barriers$n_barriers[is.na(world_barriers$n_barriers)] <- 0

world_barriers_filtered <- world_barriers %>%
  filter(!is.na(COUNTRY))

world_centroids <- st_centroid(world_barriers_filtered)

world_barriers_filtered <- world_barriers %>%
  filter(!is.na(COUNTRY))

world_centroids <- st_centroid(world_barriers_filtered)

world_centroids1 <- world_centroids %>%
  group_by(COUNTRY) %>%
  summarise(n_barriers = sum(n_barriers, na.rm = TRUE), geometry = st_union(geometry)) %>%
  ungroup()

tm_shape(world_barriers) +
  tm_polygons(col = "n_barriers", palette = c("grey85", "wheat"), style = "fixed", 
              breaks = c(0, 1, Inf), labels = c("No data", "Countries with barriers"), 
              title = "", border.col = "black", lwd = 0.2) + 
  
  tm_shape(world_centroids1) +
  tm_symbols(size = "n_barriers", col = "red", scale = 1.5, alpha = 0.5, 
             title.size = "Number of Barriers") +
  
  tm_layout( legend.title.size = 1, 
             legend.text.size = 0.7, 
             title.position = c("center", "top"),
             legend.position = c("left", "bottom")) +
  
  tm_layout(asp = 0)




df_since_2000_2020 <- df %>%
  filter(YEAR_DAM >= 2000 & YEAR_DAM <= 2020)

constructions_per_country_2000_2020 <- df_since_2000_2020 %>%
  group_by(COUNTRY) %>%
  summarise(total_constructions = n())

years_2000_2020 <- 2020 - 2000

constructions_rate_per_country2000_2020 <- constructions_per_country_2000_2020 %>%
  mutate(annual_rate_of_constructions = total_constructions / years_2000_2020)

print(constructions_rate_per_country2000_2020)



world <- ne_countries(scale = "medium", returnclass = "sf")

world_data <- st_join(world, constructions_rate_per_country2000_2020)

world_data$annual_rate_of_constructions[world_data$annual_rate_of_constructions == 0] <- NA

#constructions_rate_per_country1800_1900 <- constructions_rate_per_country1800_1900 %>%
#mutate(annual_rate_of_constructions = ifelse(annual_rate_of_constructions == 0, NA, annual_rate_of_constructions))

#world_data$annual_rate_of_constructions[is.na(world_data$annual_rate_of_constructions)] <- 0

names(world_data)

ggplot() +
  geom_sf(data = world_data, aes(fill = annual_rate_of_constructions), color = "black") +
  fill_scale +
  geom_sf(data = world_centroids1, aes(size = n_barriers), color = "red", scale = 1.5, alpha = 0.5) +
  scale_size_continuous(range = c(1, 6), name = "Number of Barriers") +
  
  labs(title = "Number and Rate of Barrier Constructions 2000-2020") +
  theme_minimal() +
  theme(
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 10),
    axis.title = element_text(size = 12),
    axis.text = element_text(size = 10)
  ) 


##############################################

#################################################################


# just take the fill scale information from below 
### Making all three maps 1980-2020 in one section and with the correct keys ------------
library(dplyr)
library(ggplot2)
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
library(countrycode)
#install.packages("tmap")
library(tmap)
#install.packages("quickPlot") 
library(quickPlot)
#library(sp) - maybe unload this
library(readxl)
#library(tidyr) - maybe also unload this
#library(boot)


df <- st_read("C:/Users/User/OneDrive - Queen's University Belfast/PhD/Chapters/Chapter 3 Global Connectivity (InvaPact)//GDW_barriers_v1_0.shp")
df <- df %>% drop_na(YEAR_DAM)
df <- df %>% filter(!YEAR_DAM < -98)
df <- df %>% filter(YEAR_DAM > 0)
table(df$YEAR_DAM)

# Cumulative number of barrier constructed (don't really need this) ---- 
df <- df[order(df$YEAR_DAM), ]
df$Cumulative_Barriers <- ave(df$YEAR_DAM, FUN = seq_along)
cumulative_df <- aggregate(Cumulative_Barriers ~ YEAR_DAM, data = df, FUN = length)
cumulative_df$Cumulative_Barriers <- cumsum(cumulative_df$Cumulative_Barriers)

ggplot(cumulative_df, aes(x = YEAR_DAM, y = Cumulative_Barriers)) +
  geom_line(color = "black", size = 1) +   xlim(1800,2020)+
  labs(x = "Year of Construction",
       y = "Cumulative Barriers Constructed") +
  theme_bw() +                            
  theme(
    plot.title = element_text(hjust = 0.5),   
    text = element_text(size = 12)) 


# Plot global scale
df$CONTINENT <- countrycode(sourcevar = df$COUNTRY,
                            origin = "country.name",
                            destination = "continent")

df$REGION <- countrycode(sourcevar = df$COUNTRY,
                         origin = "country.name",
                         destination = "region")

df <- df %>%
  mutate(CONTINENT = case_when(
    REGION == "North America" ~ "North America",  
    REGION == "Latin America & Caribbean" ~ "South America",  
    TRUE ~ CONTINENT
  ))

df <- df %>%
  mutate(CONTINENT = ifelse(COUNTRY == "Kosovo", "Europe", CONTINENT))



df <- df %>% filter(!is.na(CONTINENT))

df1  <- df %>% group_by(COUNTRY) %>% summarise(n = n())
world <- ne_countries(scale = "medium", returnclass = "sf")

world <- st_make_valid(world)
#df1 <- st_make_valid(df1)

world_data <- st_join(world, df1)
world_data$n[is.na(world_data$n)] <- 0

world_data <- world_data[,c(4,15,18,64,65,66)]


# adding n_barriers to all data 
df <- df %>%
  group_by(COUNTRY) %>%
  mutate(n_barriers = n()) %>%
  ungroup()



# year periods
generate_map_data <- function(df, start_year, end_year) {
  df_filtered <- df %>%
    filter(YEAR_DAM >= start_year & YEAR_DAM <= end_year)
  
  barriers_per_country <- df_filtered %>%
    group_by(COUNTRY) %>%
    summarise(n_barriers = n(), .groups = 'drop')
  
  constructions_per_country <- df_filtered %>%
    group_by(COUNTRY) %>%
    summarise(total_constructions = n(), .groups = 'drop') %>%
    mutate(annual_rate_of_constructions = total_constructions / (end_year - start_year))
  
  world <- ne_countries(scale = "medium", returnclass = "sf") %>% st_make_valid()
  
  barriers_sf <- st_as_sf(barriers_per_country)
  constructions_sf <- st_as_sf(constructions_per_country)
  
  world_data <- world %>%
    st_join(barriers_sf, join = st_intersects) %>%
    st_join(constructions_sf, join = st_intersects) %>%
    mutate(
      n_barriers = ifelse(is.na(n_barriers), 0, n_barriers),
      annual_rate_of_constructions = ifelse(is.na(annual_rate_of_constructions), 0, annual_rate_of_constructions)
    )
  
  world_data_filtered <- world_data %>%
    filter(!is.na(n_barriers) & n_barriers > 0)
  
  world_centroids <- st_centroid(world_data_filtered)
  world_centroids_summary <- world_centroids %>%
    group_by(name) %>%
    summarise(n_barriers = sum(n_barriers, na.rm = TRUE), geometry = st_union(geometry)) %>%
    ungroup()
  
  list(world_data = world_data, world_centroids = world_centroids_summary)
}

data_1940_2020 <- generate_map_data(df, 1940, 2020)
data_1940_1960 <- generate_map_data(df, 1940, 1960)
data_1960_1980 <- generate_map_data(df, 1960, 1980)
data_1980_2000 <- generate_map_data(df, 1980, 2000)
data_2000_2020 <- generate_map_data(df, 2000, 2020)

max_rate <- max(
  max(data_1940_1960$world_data$annual_rate_of_constructions, na.rm = TRUE),
  max(data_1960_1980$world_data$annual_rate_of_constructions, na.rm = TRUE),
  max(data_1980_2000$world_data$annual_rate_of_constructions, na.rm = TRUE),
  max(data_2000_2020$world_data$annual_rate_of_constructions, na.rm = TRUE)
)


fill_scale <- scale_fill_gradient(low = "lightblue", high = "darkblue", na.value = "grey",
                                  name = "Rate of Construction", limits = c(0, max_rate))

plot_map <- function(world_data, world_centroids, title) {
  ggplot() +
    geom_sf(data = world_data, aes(fill = annual_rate_of_constructions), color = "black") +
    fill_scale +
    geom_sf(data = world_centroids, aes(size = n_barriers), color = "red", alpha = 0.5) +
    scale_size_continuous(range = c(1, 6), name = "Number of Barriers") +
    labs(title = title) +
    theme_minimal() +
    theme(
      legend.title = element_text(size = 12),
      legend.text = element_text(size = 10),
      axis.title = element_text(size = 12),
      axis.text = element_text(size = 10)
    )
}


# 1940 - 2020
plot_map(data_1940_2020$world_data, data_1940_2020$world_centroids, "Number and Rate of Barrier Constructions 1940-2020")

# 1940
plot_map(data_1940_1960$world_data, data_1940_1960$world_centroids, "Number and Rate of Barrier Constructions 1940-1960")

#1960
plot_map(data_1960_1980$world_data, data_1960_1980$world_centroids, "Number and Rate of Barrier Constructions 1960-1980")

#1980
plot_map(data_1980_2000$world_data, data_1980_2000$world_centroids, "Number and Rate of Barrier Constructions 1980-2000")

#2000
plot_map(data_2000_2020$world_data, data_2000_2020$world_centroids, "Number and Rate of Barrier Constructions 2000-2020")


#################


## plotting the difference between 1960-2020 !!!!!!!! ---------------------
world <- ne_countries(scale = "medium", returnclass = "sf") %>% st_make_valid()

df_1960 <- constructions_rate_per_country1960_1980 %>%
  rename(rate_of_construction_1960 = annual_rate_of_constructions)

df_2020 <- constructions_rate_per_country2000_2020 %>%
  rename(rate_of_construction_2020 = annual_rate_of_constructions)


df_1960_df <- as.data.frame(df_1960)
df_2020_df <- as.data.frame(df_2020)


rate_difference <- df_1960_df %>%
  inner_join(df_2020_df, by = "COUNTRY") %>%
  mutate(rate_difference = rate_of_construction_2020 - rate_of_construction_1960) %>%
  select(COUNTRY, rate_difference)


world_data <- world %>%
  left_join(rate_difference, by = c("name" = "COUNTRY"))


world_data$rate_difference[is.na(world_data$rate_difference)] <- 0


diff_fill_scale <- scale_fill_gradient2(
  low = "red", mid = "white", high = "blue", na.value = "grey", midpoint = 0,
  name = "Difference in Rate of Construction"
)


ggplot() +
  geom_sf(data = world_data, aes(fill = rate_difference), color = "black") +
  diff_fill_scale +
  labs(title = "Difference in Rate of Barrier Constructions (1980-2000 vs 2000-2020)") +
  theme_minimal() +
  theme(
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 10),
    axis.title = element_text(size = 12),
    axis.text = element_text(size = 10)
  ) 





# percentage rate of change -----------------------

# 1940-1980
world <- ne_countries(scale = "medium", returnclass = "sf")


df_barriers_1940_1980 <- df %>%
  filter(YEAR_DAM >= 1940 & YEAR_DAM <= 1980) 

df_barriers_per_country1940_1980 <- df_barriers_1940_1980 %>%
  group_by(COUNTRY) %>%
  summarise(n_barriers = n())

df_barriers_per_country1940_1980 <- st_transform(df_barriers_per_country1940_1980, st_crs(world))
world<- st_make_valid(world)
world_barriers <- st_join(world, df_barriers_per_country1940_1980)
world_barriers$n_barriers[is.na(world_barriers$n_barriers)] <- 0

world_map <- map_data('world')

world_sf <- world_map %>% 
  st_as_sf(coords = c('long', 'lat'), crs = 4326) %>% 
  group_by(group) %>% 
  summarise(geometry = st_combine(geometry)) %>% 
  st_cast('POLYGON')

world_barriers <- st_join(world_sf, df_barriers_per_country1940_1980)
world_barriers$n_barriers[is.na(world_barriers$n_barriers)] <- 0

world_barriers_filtered <- world_barriers %>%
  filter(!is.na(COUNTRY))

world_centroids <- st_centroid(world_barriers_filtered)

world_barriers_filtered <- world_barriers %>%
  filter(!is.na(COUNTRY))

world_centroids <- st_centroid(world_barriers_filtered)

world_centroids1 <- world_centroids %>%
  group_by(COUNTRY) %>%
  summarise(n_barriers = sum(n_barriers, na.rm = TRUE), geometry = st_union(geometry)) %>%
  ungroup()

tm_shape(world_barriers) +
  tm_polygons(col = "n_barriers", palette = c("grey85", "wheat"), style = "fixed", 
              breaks = c(0, 1, Inf), labels = c("No data", "Countries with barriers"), 
              title = "", border.col = "black", lwd = 0.2) + 
  
  tm_shape(world_centroids1) +
  tm_symbols(size = "n_barriers", col = "red", scale = 1.5, alpha = 0.5, 
             title.size = "Number of Barriers") +
  
  tm_layout( legend.title.size = 1, 
             legend.text.size = 0.7, 
             title.position = c("center", "top"),
             legend.position = c("left", "bottom")) +
  
  tm_layout(asp = 0)




df_since_1940_1980<- df %>%
  filter(YEAR_DAM >= 1940 & YEAR_DAM <= 1980)

constructions_per_country_1940_1980 <- df_since_1940_1980 %>%
  group_by(COUNTRY) %>%
  summarise(total_constructions = n())

years_1940_1980 <- 1980 - 1940

constructions_rate_per_country1940_1980 <- constructions_per_country_1940_1980 %>%
  #mutate(annual_rate_of_constructions = total_constructions / years_1940_1960)
  mutate(percentage_rate_of_constructions = (total_constructions / years_1940_1980) * 100)

print(constructions_rate_per_country1940_1980)



world <- ne_countries(scale = "medium", returnclass = "sf")

world_data <- st_join(world, constructions_rate_per_country1940_1980)

#world_data$annual_rate_of_constructions[world_data$annual_rate_of_constructions == 0] <- NA
world_data$percentage_rate_of_constructions[world_data$percentage_rate_of_constructions == 0] <- NA


#constructions_rate_per_country1800_1900 <- constructions_rate_per_country1800_1900 %>%
#mutate(annual_rate_of_constructions = ifelse(annual_rate_of_constructions == 0, NA, annual_rate_of_constructions))

#world_data$annual_rate_of_constructions[is.na(world_data$annual_rate_of_constructions)] <- 0

names(world_data)

ggplot() +
  geom_sf(data = world_data, aes(fill = percentage_rate_of_constructions), color = "black") +
  fill_scale +
  geom_sf(data = world_centroids1, aes(size = n_barriers), color = "red", scale = 1.5, alpha = 0.5) +
  scale_size_continuous(range = c(1, 6), name = "Number of Barriers") +
  labs(title = "Number and Rate of Barrier Constructions 1940-1960") +
  theme_minimal() +
  theme(
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 10),
    axis.title = element_text(size = 12),
    axis.text = element_text(size = 10)
  ) 

