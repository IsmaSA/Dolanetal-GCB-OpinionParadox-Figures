Not used in the end but this is a really nice figure - use this for when we are describing the Dam Removals in Europe



# Breakpoint figure in opinion piece
#install.packages("boot")

library(ggplot2)
library(dplyr)
library(readxl)
library(tidyr)
library(boot)


#Make sure to always use this data for removasl
DamRemovalsEU <- read_xlsx("C:/Users/User/OneDrive - Queen's University Belfast/PhD/Chapters/Chapter 4 European Connectivity/AMBER Data/Removed Barriers//Dam_Removals_Europe.xlsx")

colnames(DamRemovalsEU)
colnames(DamRemovalsEU)[3] <- "RemovalYear"

DamRemovalsEU$RemovalYear <- as.numeric(DamRemovalsEU$RemovalYear)

anyNA(DamRemovalsEU$RemovalYear)
DamRemovalsEU <- DamRemovalsEU %>% drop_na(RemovalYear)

#calculating cumulative total
# 2000 - 2024
DamRemovalsEU_cleaned <- DamRemovalsEU %>%
  filter(!is.na(RemovalYear) & RemovalYear >= 2000 & RemovalYear <= 2024) %>%
  mutate(RemovalYear = as.numeric(RemovalYear)) %>%
  group_by(RemovalYear) %>%
  summarise(barriers_removed = n()) %>%
  arrange(RemovalYear) %>%
  mutate(cumulative_removed = cumsum(barriers_removed))



## bootstrapping and LOESS
loess_boot <- function(DamRemovalsEU_cleaned, indices) {
  d <- DamRemovalsEU_cleaned[indices, ]
  loess_fit <- loess(cumulative_removed ~ RemovalYear, data = d)
  return(predict(loess_fit, newdata = data.frame(RemovalYear = DamRemovalsEU_cleaned$RemovalYear)))
}

set.seed(123) 
boot_loess <- boot(DamRemovalsEU_cleaned, loess_boot, R = 1000)

ci_loess <- apply(boot_loess$t, 2, function(x) quantile(x, probs = c(0.025, 0.975), na.rm = TRUE))

DamRemovalsEU_cleaned$lower_ci <- ci_loess[1,]
DamRemovalsEU_cleaned$upper_ci <- ci_loess[2,]

##########
ggplot(DamRemovalsEU_cleaned, aes(x = RemovalYear, y = cumulative_removed)) +
  geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci), alpha = 0.2, fill = "grey") +  
  stat_smooth(method = "loess", se = FALSE, color = "black", linetype = "dashed") +  
  geom_line(color = "darkorange", size = 1.2) +  
  geom_point(color = "orange", size = 2) +  
  scale_x_continuous(breaks = seq(2000, 2024, 1)) +  
  labs(x = "Year", y = "Cumulative Number of Barriers Removed") +
  theme_minimal() +
  theme(text = element_text(size = 14))
#############

ggplot(DamRemovalsEU_cleaned, aes(x = RemovalYear, y = cumulative_removed)) +
  geom_vline(xintercept = 2000, linetype = "dashed", color = "grey", size = 1.2) +
  geom_vline(xintercept = 2014, linetype = "dashed", color = "grey", size = 1.2) +
  geom_vline(xintercept = 2020, linetype = "dashed", color = "grey", size = 1.2) +
  geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci), alpha = 0.2, fill = "grey") +  
  stat_smooth(method = "loess", se = FALSE, color = "black", linetype = "dashed") +
  geom_line(color = "darkorange", size = 1.2) +  
  geom_point(color = "darkorange", size = 4) +  
  scale_x_continuous(breaks = seq(2000, 2024, 2), limits = c(2000, 2024)) +  
  labs(x = "Year", y = "Cumulative Number of Barriers Removed") +
    theme_minimal() + 
  theme(
    panel.grid.major = element_line(size = 0.5, color = "lightgrey"),  
    panel.grid.minor = element_blank(),  
    panel.background = element_rect(fill = "white"),  
    axis.text.x = element_text(angle = 45, hjust = 1, size = 12),  
    text = element_text(size = 14)
  )



# Nodes
barriers_per_year <- DamRemovalsEU_cleaned %>%
  select(RemovalYear, barriers_removed) %>%
  arrange(RemovalYear)

barriers_per_year

# Categorize the number of barriers removed into size bins
DamRemovalsEU_cleaned <- DamRemovalsEU_cleaned %>%
  mutate(size_category = factor(case_when(
    barriers_removed >= 1000 ~ ">1000", 
    barriers_removed >= 500 ~ "500-999", 
    barriers_removed >= 100 ~ "100-499",
    TRUE ~ "<100"), 
  levels = c("<100", "100-499", "500-999", ">1000"))
  ) 


ggplot(DamRemovalsEU_cleaned, aes(x = RemovalYear, y = cumulative_removed)) +
  geom_vline(xintercept = 2000, linetype = "dashed", color = "grey", size = 1.2) +
  geom_vline(xintercept = 2014, linetype = "dashed", color = "grey", size = 1.2) +
  geom_vline(xintercept = 2020, linetype = "dashed", color = "grey", size = 1.2) +
  geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci), alpha = 0.2, fill = "black") +  
  stat_smooth(method = "loess", se = FALSE, color = "black", linetype = "dashed") +
  geom_line(color = "darkorange", size = 1.2) +  
  geom_point(aes(size = size_category), color = "darkorange", shape = 21, fill = "orange", stroke = 1.2) +  
  scale_x_continuous(breaks = seq(2000, 2024, 2), limits = c(2000, 2024)) +  
  scale_size_manual(name = "Barriers Removed", 
                    values = c("<100" = 3, "100-499" = 6, "500-999" = 9, ">1000" = 12),
                    labels = c("<100", "<500", "<1000", "â‰¥1000"),
                    guide = guide_legend(
                      title = "Barriers Removed", size = 0.5,
                      override.aes = list(fill = "orange", shape = 21))) +
  annotate("text", x = 2002.1, y = 5000, label = "Water Framework Directive (EU)\n2000", hjust = 0, size = 4) +
  geom_curve(aes(x = 2002, y = 5000, xend = 2000, yend = 5000), 
             arrow = arrow(length = unit(0.25, "cm"), type = "closed"),
             color = "black", curvature = -0.3, size = 0.8) + 
  annotate("text", x = 2010.8, y = 4000, label = "Elwha River (US) dam removals\ncompleted 2014", hjust = 1, size = 4) +
  geom_curve(aes(x = 2011, y = 4000, xend = 2014, yend = 4000), 
             arrow = arrow(length = unit(0.25, "cm"), type = "closed"),
             color = "black", curvature = 0.3, size = 0.8) +
  annotate("text", x = 2021.1, y = 1550, label = "EU Nature Restoration Law\n(Biodiversity Strategy)\nand AMBER database\n2020", hjust = 0.5, size = 4) +
  geom_curve(aes(x = 2021, y = 1000, xend = 2020, yend = 500), 
             arrow = arrow(length = unit(0.25, "cm"), type = "closed"),
             color = "black", curvature = -0.3, size = 0.8) + 
  labs(x = "Year", y = "Cumulative Number of Barriers Removed") +
  theme_minimal() +
  theme(
    panel.grid.major = element_line(size = 0.5, color = "lightgrey"),
    panel.grid.minor = element_blank(),
    panel.background = element_rect(fill = "white"),
    axis.text.x = element_text(angle = 45, hjust = 1, size = 12),
    text = element_text(size = 14)
  )







##############
######### Didnt use below ########
#plot - this one works nicely 
ggplot(DamRemovalsEU_cleaned, aes(x = RemovalYear, y = cumulative_removed)) +
  geom_line(color = "darkorange", size = 1.2) + 
  geom_point(color = "orange", size = 2) +  
  scale_x_continuous(breaks = seq(2000, 2024, 1)) + 
  labs(x = "Year", y = "Cumulative Number of Barriers Removed") +
  theme_minimal() +
  theme(text = element_text(size = 14))

#Loess without country weighting
ggplot(DamRemovalsEU_cleaned, aes(x = RemovalYear, y = cumulative_removed)) +
  geom_line(color = "darkorange", size = 1.2) + 
  geom_point(color = "orange", size = 2) +  
  stat_smooth(method = "loess", se = FALSE, linetype = "dashed", color = "black") +  
  scale_x_continuous(breaks = seq(2000, 2024, 1)) +  
  labs(x = "Year", y = "Cumulative Number of Barriers Removed") +
  theme_minimal() +
  theme(text = element_text(size = 14))


# Plot with LOESS smoothing line fitted, grouped by country
DamRemovalsEU_cleaned <- DamRemovalsEU %>%
  filter(RemovalYear >= 2000 & RemovalYear <= 2024) %>% 
  group_by(RemovalYear, Country) %>%  
  summarise(barriers_removed = n()) %>%
  arrange(RemovalYear) %>%
  mutate(cumulative_removed = cumsum(barriers_removed))

ggplot(DamRemovalsEU_cleaned, aes(x = RemovalYear, y = cumulative_removed, color = Country)) +
  geom_line(aes(group = Country), size = 1.2) +  
  geom_point(aes(size = barriers_removed), shape = 21, fill = "orange", stroke = 1.2) +  
  stat_smooth(method = "loess", aes(group = Country), se = FALSE, linetype = "dashed") +  
  scale_x_continuous(breaks = seq(2000, 2024, 1)) +  
  labs(x = "Year", y = "Cumulative Number of Barriers Removed") +
  theme_minimal() +
  theme(text = element_text(size = 14))

###############








