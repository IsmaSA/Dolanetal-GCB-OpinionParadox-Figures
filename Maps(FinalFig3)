



fill_scale <- scale_fill_gradient(low = "lightblue", high = "darkblue", na.value = "grey",
                                  name = "Rate of Construction", limits = c(0, max_rate))

#### 1960 - 1980 ---------

world <- ne_countries(scale = "medium", returnclass = "sf")


df_barriers_1960_1980 <- df %>%
  filter(YEAR_DAM >= 1960 & YEAR_DAM <= 1980) 

df_barriers_per_country1960_1980 <- df_barriers_1960_1980 %>%
  group_by(COUNTRY) %>%
  summarise(n_barriers = n())

df_barriers_per_country1960_1980 <- st_transform(df_barriers_per_country1960_1980, st_crs(world))
world<- st_make_valid(world)
world_barriers <- st_join(world, df_barriers_per_country1960_1980)
world_barriers$n_barriers[is.na(world_barriers$n_barriers)] <- 0

world_map <- map_data('world')

world_sf <- world_map %>% 
  st_as_sf(coords = c('long', 'lat'), crs = 4326) %>% 
  group_by(group) %>% 
  summarise(geometry = st_combine(geometry)) %>% 
  st_cast('POLYGON')

world_barriers <- st_join(world_sf, df_barriers_per_country1960_1980)
world_barriers$n_barriers[is.na(world_barriers$n_barriers)] <- 0

world_barriers_filtered <- world_barriers %>%
  filter(!is.na(COUNTRY))

world_centroids <- st_centroid(world_barriers_filtered)

world_barriers_filtered <- world_barriers %>%
  filter(!is.na(COUNTRY))

world_centroids <- st_centroid(world_barriers_filtered)

world_centroids1 <- world_centroids %>%
  group_by(COUNTRY) %>%
  summarise(n_barriers = sum(n_barriers, na.rm = TRUE), geometry = st_union(geometry)) %>%
  ungroup()

tm_shape(world_barriers) +
  tm_polygons(col = "n_barriers", palette = c("grey85", "wheat"), style = "fixed", 
              breaks = c(0, 1, Inf), labels = c("No data", "Countries with barriers"), 
              title = "", border.col = "black", lwd = 0.2) + 
  
  tm_shape(world_centroids1) +
  tm_symbols(size = "n_barriers", col = "red", scale = 1.5, alpha = 0.5, 
             title.size = "Number of Barriers") +
  
  tm_layout( legend.title.size = 1, 
             legend.text.size = 0.7, 
             title.position = c("center", "top"),
             legend.position = c("left", "bottom")) +
  
  tm_layout(asp = 0)




df_since_1960_1980 <- df %>%
  filter(YEAR_DAM >= 1960 & YEAR_DAM <= 1980)

constructions_per_country_1960_1980 <- df_since_1960_1980 %>%
  group_by(COUNTRY) %>%
  summarise(total_constructions = n())

years_1960_1980 <- 1980 - 1960

constructions_rate_per_country1960_1980 <- constructions_per_country_1960_1980 %>%
  mutate(annual_rate_of_constructions = total_constructions / years_1960_1980)

print(constructions_rate_per_country1960_1980)



world <- ne_countries(scale = "medium", returnclass = "sf")

world_data <- st_join(world, constructions_rate_per_country1960_1980)

world_data$annual_rate_of_constructions[world_data$annual_rate_of_constructions == 0] <- NA

#constructions_rate_per_country1800_1900 <- constructions_rate_per_country1800_1900 %>%
#mutate(annual_rate_of_constructions = ifelse(annual_rate_of_constructions == 0, NA, annual_rate_of_constructions))

#world_data$annual_rate_of_constructions[is.na(world_data$annual_rate_of_constructions)] <- 0

names(world_data)

ggplot() +
  geom_sf(data = world_data, aes(fill = annual_rate_of_constructions), color = "black") +
  fill_scale +
  geom_sf(data = world_centroids1, aes(size = n_barriers), color = "red", scale = 1.5, alpha = 0.5) +
  scale_size_continuous(range = c(1, 6), name = "Number of Barriers") +
  labs(title = "Number and Rate of Barrier Constructions 1960-1980") +
  theme_minimal() +
  theme(
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 10),
    axis.title = element_text(size = 12),
    axis.text = element_text(size = 10)
  ) 

###########################


#### 1980 - 2000 ---------

world <- ne_countries(scale = "medium", returnclass = "sf")


df_barriers_1980_2000 <- df %>%
  filter(YEAR_DAM >= 1980 & YEAR_DAM <= 2000) 

df_barriers_per_country1980_2000 <- df_barriers_1980_2000 %>%
  group_by(COUNTRY) %>%
  summarise(n_barriers = n())

df_barriers_per_country1980_2000 <- st_transform(df_barriers_per_country1980_2000, st_crs(world))
world<- st_make_valid(world)
world_barriers <- st_join(world, df_barriers_per_country1980_2000)
world_barriers$n_barriers[is.na(world_barriers$n_barriers)] <- 0

world_map <- map_data('world')

world_sf <- world_map %>% 
  st_as_sf(coords = c('long', 'lat'), crs = 4326) %>% 
  group_by(group) %>% 
  summarise(geometry = st_combine(geometry)) %>% 
  st_cast('POLYGON')

world_barriers <- st_join(world_sf, df_barriers_per_country1980_2000)
world_barriers$n_barriers[is.na(world_barriers$n_barriers)] <- 0

world_barriers_filtered <- world_barriers %>%
  filter(!is.na(COUNTRY))

world_centroids <- st_centroid(world_barriers_filtered)

world_barriers_filtered <- world_barriers %>%
  filter(!is.na(COUNTRY))

world_centroids <- st_centroid(world_barriers_filtered)

world_centroids1 <- world_centroids %>%
  group_by(COUNTRY) %>%
  summarise(n_barriers = sum(n_barriers, na.rm = TRUE), geometry = st_union(geometry)) %>%
  ungroup()

tm_shape(world_barriers) +
  tm_polygons(col = "n_barriers", palette = c("grey85", "wheat"), style = "fixed", 
              breaks = c(0, 1, Inf), labels = c("No data", "Countries with barriers"), 
              title = "", border.col = "black", lwd = 0.2) + 
  
  tm_shape(world_centroids1) +
  tm_symbols(size = "n_barriers", col = "red", scale = 1.5, alpha = 0.5, 
             title.size = "Number of Barriers") +
  
  tm_layout( legend.title.size = 1, 
             legend.text.size = 0.7, 
             title.position = c("center", "top"),
             legend.position = c("left", "bottom")) +
  
  tm_layout(asp = 0)




df_since_1980_2000 <- df %>%
  filter(YEAR_DAM >= 1980 & YEAR_DAM <= 2000)

constructions_per_country_1980_2000 <- df_since_1980_2000 %>%
  group_by(COUNTRY) %>%
  summarise(total_constructions = n())

years_1980_2000 <- 2000 - 1980

constructions_rate_per_country1980_2000 <- constructions_per_country_1980_2000 %>%
  mutate(annual_rate_of_constructions = total_constructions / years_1980_2000)

print(constructions_rate_per_country1980_2000)



world <- ne_countries(scale = "medium", returnclass = "sf")

world_data <- st_join(world, constructions_rate_per_country1980_2000)

world_data$annual_rate_of_constructions[world_data$annual_rate_of_constructions == 0] <- NA

#constructions_rate_per_country1800_1900 <- constructions_rate_per_country1800_1900 %>%
#mutate(annual_rate_of_constructions = ifelse(annual_rate_of_constructions == 0, NA, annual_rate_of_constructions))

#world_data$annual_rate_of_constructions[is.na(world_data$annual_rate_of_constructions)] <- 0

names(world_data)

ggplot() +
  geom_sf(data = world_data, aes(fill = annual_rate_of_constructions), color = "black") +
  fill_scale +
  geom_sf(data = world_centroids1, aes(size = n_barriers), color = "red", scale = 1.5, alpha = 0.5) +
  scale_size_continuous(range = c(1, 6), name = "Number of Barriers") +
  
  labs(title = "Number and Rate of Barrier Constructions 1980-2000") +
  theme_minimal() +
  theme(
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 10),
    axis.title = element_text(size = 12),
    axis.text = element_text(size = 10)
  ) 

#############################


#### 2000 - 2020 ---------

world <- ne_countries(scale = "medium", returnclass = "sf")


df_barriers_2000_2020 <- df %>%
  filter(YEAR_DAM >= 2000 & YEAR_DAM <= 2020) 

df_barriers_per_country2000_2020 <- df_barriers_2000_2020 %>%
  group_by(COUNTRY) %>%
  summarise(n_barriers = n())

df_barriers_per_country2000_2020 <- st_transform(df_barriers_per_country2000_2020, st_crs(world))
world<- st_make_valid(world)
world_barriers <- st_join(world, df_barriers_per_country2000_2020)
world_barriers$n_barriers[is.na(world_barriers$n_barriers)] <- 0

world_map <- map_data('world')

world_sf <- world_map %>% 
  st_as_sf(coords = c('long', 'lat'), crs = 4326) %>% 
  group_by(group) %>% 
  summarise(geometry = st_combine(geometry)) %>% 
  st_cast('POLYGON')

world_barriers <- st_join(world_sf, df_barriers_per_country2000_2020)
world_barriers$n_barriers[is.na(world_barriers$n_barriers)] <- 0

world_barriers_filtered <- world_barriers %>%
  filter(!is.na(COUNTRY))

world_centroids <- st_centroid(world_barriers_filtered)

world_barriers_filtered <- world_barriers %>%
  filter(!is.na(COUNTRY))

world_centroids <- st_centroid(world_barriers_filtered)

world_centroids1 <- world_centroids %>%
  group_by(COUNTRY) %>%
  summarise(n_barriers = sum(n_barriers, na.rm = TRUE), geometry = st_union(geometry)) %>%
  ungroup()

tm_shape(world_barriers) +
  tm_polygons(col = "n_barriers", palette = c("grey85", "wheat"), style = "fixed", 
              breaks = c(0, 1, Inf), labels = c("No data", "Countries with barriers"), 
              title = "", border.col = "black", lwd = 0.2) + 
  
  tm_shape(world_centroids1) +
  tm_symbols(size = "n_barriers", col = "red", scale = 1.5, alpha = 0.5, 
             title.size = "Number of Barriers") +
  
  tm_layout( legend.title.size = 1, 
             legend.text.size = 0.7, 
             title.position = c("center", "top"),
             legend.position = c("left", "bottom")) +
  
  tm_layout(asp = 0)




df_since_2000_2020 <- df %>%
  filter(YEAR_DAM >= 2000 & YEAR_DAM <= 2020)

constructions_per_country_2000_2020 <- df_since_2000_2020 %>%
  group_by(COUNTRY) %>%
  summarise(total_constructions = n())

years_2000_2020 <- 2020 - 2000

constructions_rate_per_country2000_2020 <- constructions_per_country_2000_2020 %>%
  mutate(annual_rate_of_constructions = total_constructions / years_2000_2020)

print(constructions_rate_per_country2000_2020)



world <- ne_countries(scale = "medium", returnclass = "sf")

world_data <- st_join(world, constructions_rate_per_country2000_2020)

world_data$annual_rate_of_constructions[world_data$annual_rate_of_constructions == 0] <- NA

#constructions_rate_per_country1800_1900 <- constructions_rate_per_country1800_1900 %>%
#mutate(annual_rate_of_constructions = ifelse(annual_rate_of_constructions == 0, NA, annual_rate_of_constructions))

#world_data$annual_rate_of_constructions[is.na(world_data$annual_rate_of_constructions)] <- 0

names(world_data)

ggplot() +
  geom_sf(data = world_data, aes(fill = annual_rate_of_constructions), color = "black") +
  fill_scale +
  geom_sf(data = world_centroids1, aes(size = n_barriers), color = "red", scale = 1.5, alpha = 0.5) +
  scale_size_continuous(range = c(1, 6), name = "Number of Barriers") +
  
  labs(title = "Number and Rate of Barrier Constructions 2000-2020") +
  theme_minimal() +
  theme(
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 10),
    axis.title = element_text(size = 12),
    axis.text = element_text(size = 10)
  ) 


##############################################
