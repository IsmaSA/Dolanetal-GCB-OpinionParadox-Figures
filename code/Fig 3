

#Be prepared - this is a very long winded way of doing this - but this was the only way i seemed to be able to get it to work lol!

  
df <- st_read("GDW_barriers_v1_0.shp")
df <- df %>% drop_na(YEAR_DAM)
df <- df %>% filter(!YEAR_DAM < -98)
df <- df %>% filter(YEAR_DAM > 0)
table(df$YEAR_DAM)

  fill_scale <- scale_fill_gradient(low = "lightblue", high = "darkblue", na.value = "grey",
                                    name = "Rate of Construction", limits = c(0, max_rate))

  #ensuring scale is the same across time periods
  # need ot fix the red circles so they are the same range each time
  scale_size_continuous(
    breaks = c(2000, 4000, 6000, 8000, 10000),
    labels = c("2,000", "4,000", "6,000", "8,000", "10,000"),
    name = "Number of Barriers",
    range = c(1, 6),
    limits = c(0, 10000)
  )
  
  
#### 1940-1960 ------------
  world <- ne_countries(scale = "medium", returnclass = "sf")
  
  
  df_barriers_1940_1960 <- df %>%
    filter(YEAR_DAM >= 1940 & YEAR_DAM <= 1960) 
  
  df_barriers_per_country1940_1960 <- df_barriers_1940_1960 %>%
    group_by(COUNTRY) %>%
    summarise(n_barriers = n())
  
  df_barriers_per_country1940_1960 <- st_transform(df_barriers_per_country1940_1960, st_crs(world))
  world<- st_make_valid(world)
  world_barriers <- st_join(world, df_barriers_per_country1940_1960)
  world_barriers$n_barriers[is.na(world_barriers$n_barriers)] <- 0
  
  world_map <- map_data('world')
  
  world_sf <- world_map %>% 
    st_as_sf(coords = c('long', 'lat'), crs = 4326) %>% 
    group_by(group) %>% 
    summarise(geometry = st_combine(geometry)) %>% 
    st_cast('POLYGON')
  
  world_barriers <- st_join(world_sf, df_barriers_per_country1940_1960)
  world_barriers$n_barriers[is.na(world_barriers$n_barriers)] <- 0
  
  world_barriers_filtered <- world_barriers %>%
    filter(!is.na(COUNTRY))
  
  world_centroids <- st_centroid(world_barriers_filtered)
  
  world_barriers_filtered <- world_barriers %>%
    filter(!is.na(COUNTRY))
  
  world_centroids <- st_centroid(world_barriers_filtered)
  
  world_centroids1 <- world_centroids %>%
    group_by(COUNTRY) %>%
    summarise(n_barriers = sum(n_barriers, na.rm = TRUE), geometry = st_union(geometry)) %>%
    ungroup()
  
  tm_shape(world_barriers) +
    tm_polygons(col = "n_barriers", palette = c("grey85", "wheat"), style = "fixed", 
                breaks = c(0, 1, Inf), labels = c("No data", "Countries with barriers"), 
                title = "", border.col = "black", lwd = 0.2) + 
    
    tm_shape(world_centroids1) +
    tm_symbols(size = "n_barriers", col = "red", scale = 1.5, alpha = 0.5, 
               title.size = "Number of Barriers") +
    
    tm_layout( legend.title.size = 1, 
               legend.text.size = 0.7, 
               title.position = c("center", "top"),
               legend.position = c("left", "bottom")) +
    
    tm_layout(asp = 0)
  
  
  
  
  df_since_1940_1960 <- df %>%
    filter(YEAR_DAM >= 1940 & YEAR_DAM <= 1960)
  
  constructions_per_country_1940_1960 <- df_since_1940_1960 %>%
    group_by(COUNTRY) %>%
    summarise(total_constructions = n())
  
  years_1940_1960 <- 1960 - 1940
  
  # percentage constructions 
  constructions_rate_per_country1940_1960 <- constructions_per_country_1940_1960 %>%
    mutate(percentage_rate_of_constructions = (total_constructions / sum(total_constructions, na.rm = TRUE)) * 100)
  
  
  print(constructions_rate_per_country1940_1960)
  
  world <- ne_countries(scale = "medium", returnclass = "sf")
  
  world_data <- st_join(world, constructions_rate_per_country1940_1960)
  
  world_data$percentage_rate_of_constructions[world_data$percentage_rate_of_constructions == 0] <- NA
  
 
  names(world_data)
  
  # plotting percentage rate
  ggplot() +
    geom_sf(data = world_data, aes(fill = percentage_rate_of_constructions), color = "black") +
    fill_scale +
    geom_sf(data = world_centroids1, aes(size = n_barriers), color = "red", scale = 1.5, alpha = 0.5) +
    #scale_size_continuous(range = c(1, 6), name = "Number of Barriers") +
    scale_size_continuous(
      breaks = c(2000, 4000, 6000, 8000, 10000),
      labels = c("2,000", "4,000", "6,000", "8,000", "10,000"),
      name = "Number of Barriers",
      range = c(1, 6),
      limits = c(0, 10000)
    ) +
    labs(title = "Number and Rate of Barrier Constructions 1940_1960") +
    theme_minimal() +
    theme(
      legend.title = element_text(size = 12),
      legend.text = element_text(size = 10),
      axis.title = element_text(size = 12),
      axis.text = element_text(size = 10)
    ) 
  
  
  

   #### 1960 - 1980 ---------
  
  world <- ne_countries(scale = "medium", returnclass = "sf")
  
  
  df_barriers_1960_1980 <- df %>%
    filter(YEAR_DAM >= 1960 & YEAR_DAM <= 1980) 
  
  df_barriers_per_country1960_1980 <- df_barriers_1960_1980 %>%
    group_by(COUNTRY) %>%
    summarise(n_barriers = n())
  
  df_barriers_per_country1960_1980 <- st_transform(df_barriers_per_country1960_1980, st_crs(world))
  world<- st_make_valid(world)
  world_barriers <- st_join(world, df_barriers_per_country1960_1980)
  world_barriers$n_barriers[is.na(world_barriers$n_barriers)] <- 0
  
  world_map <- map_data('world')
  
  world_sf <- world_map %>% 
    st_as_sf(coords = c('long', 'lat'), crs = 4326) %>% 
    group_by(group) %>% 
    summarise(geometry = st_combine(geometry)) %>% 
    st_cast('POLYGON')
  
  world_barriers <- st_join(world_sf, df_barriers_per_country1960_1980)
  world_barriers$n_barriers[is.na(world_barriers$n_barriers)] <- 0
  
  world_barriers_filtered <- world_barriers %>%
    filter(!is.na(COUNTRY))
  
  world_centroids <- st_centroid(world_barriers_filtered)
  
  world_barriers_filtered <- world_barriers %>%
    filter(!is.na(COUNTRY))
  
  world_centroids <- st_centroid(world_barriers_filtered)
  
  world_centroids1 <- world_centroids %>%
    group_by(COUNTRY) %>%
    summarise(n_barriers = sum(n_barriers, na.rm = TRUE), geometry = st_union(geometry)) %>%
    ungroup()
  
  tm_shape(world_barriers) +
    tm_polygons(col = "n_barriers", palette = c("grey85", "wheat"), style = "fixed", 
                breaks = c(0, 1, Inf), labels = c("No data", "Countries with barriers"), 
                title = "", border.col = "black", lwd = 0.2) + 
    
    tm_shape(world_centroids1) +
    tm_symbols(size = "n_barriers", col = "red", scale = 1.5, alpha = 0.5, 
               title.size = "Number of Barriers") +
    
    tm_layout( legend.title.size = 1, 
               legend.text.size = 0.7, 
               title.position = c("center", "top"),
               legend.position = c("left", "bottom")) +
    
    tm_layout(asp = 0)
  
  
  
  
  df_since_1960_1980 <- df %>%
    filter(YEAR_DAM >= 1960 & YEAR_DAM <= 1980)
  
  constructions_per_country_1960_1980 <- df_since_1960_1980 %>%
    group_by(COUNTRY) %>%
    summarise(total_constructions = n())
  
  years_1960_1980 <- 1980 - 1960
  

# percentage constructions 
  constructions_rate_per_country1960_1980 <- constructions_per_country_1960_1980 %>%
    mutate(percentage_rate_of_constructions = (total_constructions / sum(total_constructions, na.rm = TRUE)) * 100)
  
  
  print(constructions_rate_per_country1960_1980)
  
  
  world <- ne_countries(scale = "medium", returnclass = "sf")
  
  world_data <- st_join(world, constructions_rate_per_country1960_1980)
  
  world_data$percentage_rate_of_constructions[world_data$percentage_rate_of_constructions == 0] <- NA
  
  names(world_data)

  
  # plotting percentage rate
  ggplot() +
    geom_sf(data = world_data, aes(fill = percentage_rate_of_constructions), color = "black") +
    fill_scale +
    geom_sf(data = world_centroids1, aes(size = n_barriers), color = "red", scale = 1.5, alpha = 0.5) +
    #scale_size_continuous(range = c(1, 6), name = "Number of Barriers") +
    scale_size_continuous(
      breaks = c(2000, 4000, 6000, 8000, 10000),
      labels = c("2,000", "4,000", "6,000", "8,000", "10,000"),
      name = "Number of Barriers",
      range = c(1, 6),
      limits = c(0, 10000)
    ) +    labs(title = "Number and Rate of Barrier Constructions 1960-1980") +
    theme_minimal() +
    theme(
      legend.title = element_text(size = 12),
      legend.text = element_text(size = 10),
      axis.title = element_text(size = 12),
      axis.text = element_text(size = 10)
    ) 
  
  
  
  ###########################
  
  
  #### 1980 - 2000 ---------
  
  world <- ne_countries(scale = "medium", returnclass = "sf")
  
  
  df_barriers_1980_2000 <- df %>%
    filter(YEAR_DAM >= 1980 & YEAR_DAM <= 2000) 
  
  df_barriers_per_country1980_2000 <- df_barriers_1980_2000 %>%
    group_by(COUNTRY) %>%
    summarise(n_barriers = n())
  
  df_barriers_per_country1980_2000 <- st_transform(df_barriers_per_country1980_2000, st_crs(world))
  world<- st_make_valid(world)
  world_barriers <- st_join(world, df_barriers_per_country1980_2000)
  world_barriers$n_barriers[is.na(world_barriers$n_barriers)] <- 0
  
  world_map <- map_data('world')
  
  world_sf <- world_map %>% 
    st_as_sf(coords = c('long', 'lat'), crs = 4326) %>% 
    group_by(group) %>% 
    summarise(geometry = st_combine(geometry)) %>% 
    st_cast('POLYGON')
  
  world_barriers <- st_join(world_sf, df_barriers_per_country1980_2000)
  world_barriers$n_barriers[is.na(world_barriers$n_barriers)] <- 0
  
  world_barriers_filtered <- world_barriers %>%
    filter(!is.na(COUNTRY))
  
  world_centroids <- st_centroid(world_barriers_filtered)
  
  world_barriers_filtered <- world_barriers %>%
    filter(!is.na(COUNTRY))
  
  world_centroids <- st_centroid(world_barriers_filtered)
  
  world_centroids1 <- world_centroids %>%
    group_by(COUNTRY) %>%
    summarise(n_barriers = sum(n_barriers, na.rm = TRUE), geometry = st_union(geometry)) %>%
    ungroup()
  
  tm_shape(world_barriers) +
    tm_polygons(col = "n_barriers", palette = c("grey85", "wheat"), style = "fixed", 
                breaks = c(0, 1, Inf), labels = c("No data", "Countries with barriers"), 
                title = "", border.col = "black", lwd = 0.2) + 
    
    tm_shape(world_centroids1) +
    tm_symbols(size = "n_barriers", col = "red", scale = 1.5, alpha = 0.5, 
               title.size = "Number of Barriers") +
    
    tm_layout( legend.title.size = 1, 
               legend.text.size = 0.7, 
               title.position = c("center", "top"),
               legend.position = c("left", "bottom")) +
    
    tm_layout(asp = 0)
  
  df_since_1980_2000 <- df %>%
    filter(YEAR_DAM >= 1980 & YEAR_DAM <= 2000)
  
  constructions_per_country_1980_2000 <- df_since_1980_2000 %>%
    group_by(COUNTRY) %>%
    summarise(total_constructions = n())
  
  years_1980_2000 <- 2000 - 1980
 

  # percentage constructions 
  constructions_rate_per_country1980_2000 <- constructions_per_country_1980_2000 %>%
    mutate(percentage_rate_of_constructions = (total_constructions / sum(total_constructions, na.rm = TRUE)) * 100)
  
  print(constructions_rate_per_country1980_2000)
  
  
  
  world <- ne_countries(scale = "medium", returnclass = "sf")
  
  world_data <- st_join(world, constructions_rate_per_country1980_2000)
  
  world_data$percentage_rate_of_constructions[world_data$percentage_rate_of_constructions == 0] <- NA
  
  names(world_data)
  

  # plotting percentage rate
  ggplot() +
    geom_sf(data = world_data, aes(fill = percentage_rate_of_constructions), color = "black") +
    fill_scale +
    geom_sf(data = world_centroids1, aes(size = n_barriers), color = "red", scale = 1.5, alpha = 0.5) +
    #scale_size_continuous(range = c(1, 6), name = "Number of Barriers") +
    scale_size_continuous(
      breaks = c(2000, 4000, 6000, 8000, 10000),
      labels = c("2,000", "4,000", "6,000", "8,000", "10,000"),
      name = "Number of Barriers",
      range = c(1, 6),
      limits = c(0, 10000)
    ) +    labs(title = "Number and Rate of Barrier Constructions 1980-2000") +
    theme_minimal() +
    theme(
      legend.title = element_text(size = 12),
      legend.text = element_text(size = 10),
      axis.title = element_text(size = 12),
      axis.text = element_text(size = 10)
    ) 
  
  #############################
  
  
  #### 2000 - 2020 ---------
  
  world <- ne_countries(scale = "medium", returnclass = "sf")
  
  
  df_barriers_2000_2020 <- df %>%
    filter(YEAR_DAM >= 2000 & YEAR_DAM <= 2020) 
  
  df_barriers_per_country2000_2020 <- df_barriers_2000_2020 %>%
    group_by(COUNTRY) %>%
    summarise(n_barriers = n())
  
  df_barriers_per_country2000_2020 <- st_transform(df_barriers_per_country2000_2020, st_crs(world))
  world<- st_make_valid(world)
  world_barriers <- st_join(world, df_barriers_per_country2000_2020)
  world_barriers$n_barriers[is.na(world_barriers$n_barriers)] <- 0
  
  world_map <- map_data('world')
  
  world_sf <- world_map %>% 
    st_as_sf(coords = c('long', 'lat'), crs = 4326) %>% 
    group_by(group) %>% 
    summarise(geometry = st_combine(geometry)) %>% 
    st_cast('POLYGON')
  
  world_barriers <- st_join(world_sf, df_barriers_per_country2000_2020)
  world_barriers$n_barriers[is.na(world_barriers$n_barriers)] <- 0
  
  world_barriers_filtered <- world_barriers %>%
    filter(!is.na(COUNTRY))
  
  world_centroids <- st_centroid(world_barriers_filtered)
  
  world_barriers_filtered <- world_barriers %>%
    filter(!is.na(COUNTRY))
  
  world_centroids <- st_centroid(world_barriers_filtered)
  
  world_centroids1 <- world_centroids %>%
    group_by(COUNTRY) %>%
    summarise(n_barriers = sum(n_barriers, na.rm = TRUE), geometry = st_union(geometry)) %>%
    ungroup()
  
  tm_shape(world_barriers) +
    tm_polygons(col = "n_barriers", palette = c("grey85", "wheat"), style = "fixed", 
                breaks = c(0, 1, Inf), labels = c("No data", "Countries with barriers"), 
                title = "", border.col = "black", lwd = 0.2) + 
    
    tm_shape(world_centroids1) +
    tm_symbols(size = "n_barriers", col = "red", scale = 1.5, alpha = 0.5, 
               title.size = "Number of Barriers") +
    
    tm_layout( legend.title.size = 1, 
               legend.text.size = 0.7, 
               title.position = c("center", "top"),
               legend.position = c("left", "bottom")) +
    
    tm_layout(asp = 0)
  
  
  
  
  df_since_2000_2020 <- df %>%
    filter(YEAR_DAM >= 2000 & YEAR_DAM <= 2020)
  
  constructions_per_country_2000_2020 <- df_since_2000_2020 %>%
    group_by(COUNTRY) %>%
    summarise(total_constructions = n())
  
  years_2000_2020 <- 2020 - 2000
  

  # percentage constructions 
  constructions_rate_per_country2000_2020 <- constructions_per_country_2000_2020 %>%
    mutate(percentage_rate_of_constructions = (total_constructions / sum(total_constructions, na.rm = TRUE)) * 100)
  
  print(constructions_rate_per_country2000_2020)
  
  
  
  world <- ne_countries(scale = "medium", returnclass = "sf")
  
  world_data <- st_join(world, constructions_rate_per_country2000_2020)
  
  world_data$percentage_rate_of_constructions[world_data$percentage_rate_of_constructions == 0] <- NA
  
  
  names(world_data)
  
  
  # plotting percentage rate
  ggplot() +
    geom_sf(data = world_data, aes(fill = percentage_rate_of_constructions), color = "black") +
    fill_scale +
    geom_sf(data = world_centroids1, aes(size = n_barriers), color = "red", scale = 1.5, alpha = 0.5) +
    #scale_size_continuous(range = c(1, 6), name = "Number of Barriers") +
    scale_size_continuous(
      breaks = c(2000, 4000, 6000, 8000, 10000),
      labels = c("2,000", "4,000", "6,000", "8,000", "10,000"),
      name = "Number of Barriers",
      range = c(1, 6),
      limits = c(0, 10000)
    ) +    labs(title = "Number and Rate of Barrier Constructions 2000-2020") +
    theme_minimal() +
    theme(
      legend.title = element_text(size = 12),
      legend.text = element_text(size = 10),
      axis.title = element_text(size = 12),
      axis.text = element_text(size = 10)
    ) 
  
  
  ##############################################
  
# Maps were then collated in Inkscape into one panel
  
  
